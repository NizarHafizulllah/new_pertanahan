<?php
class lap_model extends CI_Model {
	function lap_model() {
		parent::__construct();
	}
	
	 


	function daftar_list($data){
		extract($data);
		$this->db->select("P.DAFT_ID,P.LEASING_ID,L.LEASING_NAMA,P.NO_BPKB,P.NREG_BPKB,P.NO_RANGKA,P.NO_MESIN,P.NO_POLISI,P.TGL_BPKB,P.NAMA_PEMILIK,
	      P.ALAMAT_PEMILIK,P.MERK_ID,P.TYPE_KENDARAAN,P.WARNA_ID,P.TAHUN_KENDARAAN,P.USER_ID,P.STATUS,P.DAFT_DATE,P.DAFT_BY,P.NAMA_PENGAJUAN_LEASING,
	      P.ALAMAT_PENGAJUAN_LEASING,M.MERK_NAMA,M.MERK_NAMA_R,P.VERIFIKASI_DATE,P.VERIFIKASI_BY,P.VERIFIKASI_KET,P.DAFT_LEVEL2_DATE,P.DAFT_LEVEL2_BY,
	      P.DAFT_LEVEL3_DATE,P.DAFT_LEVEL3_BY,P.NAMA_PENGAJUAN_LEASING,P.ALAMAT_PENGAJUAN_LEASING,P.LEPAS_DAFT_BY,P.LEPAS_DAFT_DATE
	      ")
		->from("T_PENDAFTARAN P")
		->join("M_LEASING L",'L.LEASING_ID = P.LEASING_ID')
		->join("V_MERK M ",'M.MERK_ID = P.MERK_ID','left')
		->where("P.DAFT_DATE BETWEEN '$TGL_DAFTAR1' AND '$TGL_DAFTAR2'",NULL,FALSE)
		->where("P.LEASING_ID",$LEASING_ID);
		$res = $this->db->get();
		//echo $this->db->last_query(); exit;
		return $res;

	}

	function lepas_list($data){
		extract($data);
		
      $this->db->select("P.DAFT_ID,P.LEASING_ID,L.LEASING_NAMA,P.NO_BPKB,P.NREG_BPKB,P.NO_RANGKA,P.NO_MESIN,P.NO_POLISI,P.TGL_BPKB,P.NAMA_PEMILIK,
      P.ALAMAT_PEMILIK,P.MERK_ID,P.TYPE_KENDARAAN,P.WARNA_ID,P.TAHUN_KENDARAAN,P.USER_ID,P.STATUS,P.DAFT_DATE,P.DAFT_BY,P.NAMA_PENGAJUAN_LEASING,
      P.ALAMAT_PENGAJUAN_LEASING,M.MERK_NAMA,M.MERK_NAMA_R,P.VERIFIKASI_DATE,P.VERIFIKASI_BY,P.VERIFIKASI_KET,P.DAFT_LEVEL2_DATE,P.DAFT_LEVEL2_BY,
      P.DAFT_LEVEL3_DATE,P.DAFT_LEVEL3_BY,P.NAMA_PENGAJUAN_LEASING,P.ALAMAT_PENGAJUAN_LEASING,P.LEPAS_DAFT_BY,P.LEPAS_DAFT_DATE
      ")
      ->from("T_PENDAFTARAN P")
		->join("M_LEASING L",'L.LEASING_ID = P.LEASING_ID')
		->join("V_MERK M ",'M.MERK_ID = P.MERK_ID','left')
	  ->where("P.LEPAS_DAFT_BY IS NOT NULL",NULL,FALSE)
	  ->where("P.LEPAS_DAFT_DATE BETWEEN '$TGL_DAFTAR1' AND '$TGL_DAFTAR2'",NULL,FALSE)
	  ->where("P.LEASING_ID",$LEASING_ID);
		$res = $this->db->get();
	//echo $this->db->last_query(); exit;
		return $res;
	}

	function blokir_list($data){
		extract($data);
		
      $this->db->select("B.BLOKIR_ID,B.DAFT_ID,B.BPKB_ID,B.NO_BPKB,B.BLOKIR_STATUS,B.BLOKIR_NO,B.BLOKIR_DATE,B.BLOKIR_BY,
      B.LEASING_ID,B.PERIHAL_PEMOHON,B.NOSURAT_PEMOHON,B.TGLSURAT_PEMOHON,B.OPEN_BLOKIR_DATE,B.OPEN_BLOKIR_BY,
      B.BLOKIR_JENIS,P.DAFT_ID,P.LEASING_ID,L.LEASING_NAMA,P.NO_BPKB,P.NREG_BPKB,P.NO_RANGKA,P.NO_MESIN,P.NO_POLISI,P.TGL_BPKB,P.NAMA_PEMILIK,
      P.ALAMAT_PEMILIK,P.MERK_ID,P.TYPE_KENDARAAN,P.WARNA_ID,P.TAHUN_KENDARAAN,P.USER_ID,P.STATUS,P.DAFT_DATE,P.DAFT_BY,P.NAMA_PENGAJUAN_LEASING,
      P.ALAMAT_PENGAJUAN_LEASING,M.MERK_NAMA,M.MERK_NAMA_R,P.VERIFIKASI_DATE,P.VERIFIKASI_BY,P.VERIFIKASI_KET,P.DAFT_LEVEL2_DATE,P.DAFT_LEVEL2_BY,
      P.DAFT_LEVEL3_DATE,P.DAFT_LEVEL3_BY,P.NAMA_PENGAJUAN_LEASING,P.ALAMAT_PENGAJUAN_LEASING,P.LEPAS_DAFT_BY,P.LEPAS_DAFT_DATE")
      ->from("T_BLOKIR B")
      ->join("T_PENDAFTARAN P","B.DAFT_ID=P.DAFT_ID")
		->join("M_LEASING L",'L.LEASING_ID = P.LEASING_ID')
		->join("V_MERK M ",'M.MERK_ID = P.MERK_ID','LEFT')
	  ->where("B.BLOKIR_DATE BETWEEN '$TGL_DAFTAR1' AND '$TGL_DAFTAR2'",NULL,FALSE)
	  ->where("P.LEASING_ID",$LEASING_ID);
		$res = $this->db->get();
	//echo $this->db->last_query(); exit;
		return $res;
	}

function buka_list($data){
	  extract($data);
		
      $this->db->select("B.BLOKIR_ID,B.DAFT_ID,B.BPKB_ID,B.NO_BPKB,B.BLOKIR_STATUS,B.BLOKIR_NO,B.BLOKIR_DATE,B.BLOKIR_BY,
      B.LEASING_ID,B.PERIHAL_PEMOHON,B.NOSURAT_PEMOHON,B.TGLSURAT_PEMOHON,B.OPEN_BLOKIR_DATE,B.OPEN_BLOKIR_BY,
      B.BLOKIR_JENIS,P.DAFT_ID,P.LEASING_ID,L.LEASING_NAMA,P.NO_BPKB,P.NREG_BPKB,P.NO_RANGKA,P.NO_MESIN,P.NO_POLISI,P.TGL_BPKB,P.NAMA_PEMILIK,
      P.ALAMAT_PEMILIK,P.MERK_ID,P.TYPE_KENDARAAN,P.WARNA_ID,P.TAHUN_KENDARAAN,P.USER_ID,P.STATUS,P.DAFT_DATE,P.DAFT_BY,P.NAMA_PENGAJUAN_LEASING,
      P.ALAMAT_PENGAJUAN_LEASING,M.MERK_NAMA,M.MERK_NAMA_R,P.VERIFIKASI_DATE,P.VERIFIKASI_BY,P.VERIFIKASI_KET,P.DAFT_LEVEL2_DATE,P.DAFT_LEVEL2_BY,
      P.DAFT_LEVEL3_DATE,P.DAFT_LEVEL3_BY,P.NAMA_PENGAJUAN_LEASING,P.ALAMAT_PENGAJUAN_LEASING,P.LEPAS_DAFT_BY,P.LEPAS_DAFT_DATE")
      ->from("T_BLOKIR B")
      ->join("T_PENDAFTARAN P","B.DAFT_ID=P.DAFT_ID")
		->join("M_LEASING L",'L.LEASING_ID = P.LEASING_ID')
		->join("V_MERK M ",'M.MERK_ID = P.MERK_ID','left')
	  ->where("B.OPEN_BLOKIR_DATE BETWEEN '$TGL_DAFTAR1' AND '$TGL_DAFTAR2'",NULL,FALSE)
	  ->where("P.LEASING_ID",$LEASING_ID);
	  //echo $this->db->last_query(); exit;
		$res = $this->db->get();
	 
	return $res;
}

}




?>